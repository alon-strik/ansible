---
#Provision some instances:

- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
  - group_vars/all

  tasks:

  - local_action: slurp src="{{playbook_dir}}/files/ec2_user_data"
    register: ec2_user_data_b64

  - name: Create EC2 Instance with user-data
    local_action:
       module: ec2
       keypair: "{{ ec2_keypair }}"
       group_id: "{{ ec2_group_id }}"
       type: "{{ ec2_instance_type }}"
       image: "{{ ec2_image }}"
       region: "{{ ec2_region }}"
       count: "{{ ec2_instance_count }}"
       vpc_subnet_id: "{{ vpc_subnet_id }}"
       user_data: "{{user_data}}"
    register: ec2

#  - name: Launch ec2 instances
#    ec2: >
#     keypair="{{ ec2_keypair }}"
#     group_id="{{ ec2_group_id }}"
#     type="{{ ec2_instance_type }}"
#     image="{{ ec2_image }}"
#     region="{{ ec2_region }}"
#     count="{{ ec2_instance_count }}"
#     vpc_subnet_id="{{ vpc_subnet_id }}"
#     user_data: |
#            #!/bin/bash
#            echo Hello, World! > /tmp/hello
#    register: ec2

 #must have public ip
  - name: Wait for SSH to come up
    local_action: wait_for host={{ item.public_dns_name }}
      port=22 delay=60 timeout=320 state=started
    with_items: "{{ ec2.instances }}"
